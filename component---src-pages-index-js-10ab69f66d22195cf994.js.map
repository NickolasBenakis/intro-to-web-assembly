{"version":3,"sources":["webpack:///./src/components/TOCCard.js","webpack:///./src/pages/index.js","webpack:///./src/util/helpers.js"],"names":["sortFn","helpers","LessonCard","content","title","console","log","sections","map","lesson","node","frontmatter","sort","reduce","acc","length","section","split","push","className","key","path","to","IndexPage","query","render","props","allMarkdownRemark","edges","splitSections","str","test","Error","exec","getCharScore","char","index","charCodeAt","score","module","exports","sorter","a","b","aOrder","bOrder","attributes","order","aSec","aSub","bSec","bSub"],"mappings":"wKAIMA,E,UAASC,OA6CAC,EA3CI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC7BC,QAAQC,IAAIN,GAEZ,IAAMO,EAAWJ,EACdK,KAAI,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,eAC1BC,KAAKZ,GACLa,QAAO,SAACC,EAAKL,GACZ,OAAKK,EAAIC,QAKWD,EAAIA,EAAIC,OAAS,GAAG,GAAGC,QAAQC,MAAM,KAAK,KAC1CR,EAAOO,QAAQC,MAAM,KAAK,GAC5CH,EAAIA,EAAIC,OAAS,GAAGG,KAAKT,GAEzBK,EAAII,KAAK,CAACT,IAGLK,IAXLA,EAAII,KAAK,CAACT,IACHK,KAWR,IAEL,OACE,yBAAKK,UAAU,wHACb,wBAAIA,UAAU,0GAA0Gf,GACxH,wBAAIe,UAAU,SACXZ,EAASC,KAAI,SAAAQ,GAAO,OACnB,wBAAII,IAAKJ,EAAQ,GAAGA,QAASG,UAAU,QACrC,wBAAIA,UAAU,QAAQH,EAAQ,GAAGA,SACjC,wBAAIG,UAAU,0CACXH,EAAQR,KAAI,SAAAC,GAAM,OACjB,wBAAIW,IAAKX,EAAOY,KAAMF,UAAU,qBAC9B,kBAAC,IAAD,CAAMG,GAAIb,EAAOY,MAAOZ,EAAOL,mB,UCQlCmB,UAvCG,kBAChB,kBAAC,IAAD,CACEC,MAAK,aA0BLC,OAAQ,SAAAC,GAAK,OACX,6BACE,kBAAC,EAAD,CACEtB,MAAM,WACND,QAASuB,EAAMC,kBAAkBC,c,qBCvC3C,SAASC,EAAcC,GAIrB,IAHyB,cAGHC,KAAKD,GACzB,MAAM,IAAIE,MACLF,EADC,8GAKR,MAAO,CARc,OAQAG,KAAKH,GAAK,GAPV,UAO2BG,KAAKH,GAAK,I,UAG5D,IAAMI,EAAe,SAAAJ,GAAG,OACtBA,EACGb,MAAM,IACNT,KAAI,SAAC2B,EAAMC,GAAP,OAAiBD,EAAKE,WAAW,GAAhB,SAAqB,GAAMD,MAChDvB,QAAO,SAACC,EAAKwB,GAAN,OAAgBxB,EAAMwB,MAyBlCC,EAAOC,QAAQX,cAAgBA,EAC/BU,EAAOC,QAAQC,OAxBf,SAAgBC,EAAGC,GACjB,IAAIC,EAAQC,EAERH,EAAEI,YAAcJ,EAAEI,WAAWC,OAC/BH,EAASF,EAAEI,WAAWC,MACtBF,EAASF,EAAEG,WAAWC,QAEtBH,EAASF,EAAEK,MACXF,EAASF,EAAEI,OARO,MAWClB,EAAce,GAA5BI,EAXa,KAWPC,EAXO,OAYCpB,EAAcgB,GAA5BK,EAZa,KAYPC,EAZO,KAepB,OAAIH,IAASE,EACJF,EAAOE,EAIThB,EAAae,GAAQf,EAAaiB","file":"component---src-pages-index-js-10ab69f66d22195cf994.js","sourcesContent":["import React from \"react\";\nimport Link from \"gatsby-link\";\nimport * as helpers from \"../util/helpers\";\n\nconst sortFn = helpers.sorter;\n\nconst LessonCard = ({ content, title }) => {\n  console.log(sortFn);\n\n  const sections = content\n    .map(lesson => lesson.node.frontmatter)\n    .sort(sortFn)\n    .reduce((acc, lesson) => {\n      if (!acc.length) {\n        acc.push([lesson]);\n        return acc;\n      }\n\n      const lastSection = acc[acc.length - 1][0].section.split(\",\")[0];\n      if (lastSection === lesson.section.split(\",\")[0]) {\n        acc[acc.length - 1].push(lesson);\n      } else {\n        acc.push([lesson]);\n      }\n\n      return acc;\n    }, []);\n\n  return (\n    <div className=\"relative bg-white grid p-8 px-10 mt-20 w-full mx-auto md:w-3/4 lg:w-3/5 border-2 border-gray shadow rounded-xl mb-10\">\n      <h2 className=\"text-black py-4 bg-yellow w-48 font-bold text-center shadow-lg transform-gpu -rotate-12 absolute -mt-6\">{title}</h2>\n      <ol className=\"mt-10\">\n        {sections.map(section => (\n          <li key={section[0].section} className=\"my-2\">\n            <h3 className=\"py-2\">{section[0].section}</h3>\n            <ol className=\"list-decimal ml-8 leading-8 font-light\">\n              {section.map(lesson => (\n                <li key={lesson.path} className=\"text-purple-light\">\n                  <Link to={lesson.path}>{lesson.title}</Link>\n                </li>\n              ))}\n            </ol>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default LessonCard;\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Card from \"../components/TOCCard\";\n\nimport \"../styles/global.css\";\n\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n      query HomepageTOC {\n        site {\n          siteMetadata {\n            title\n            subtitle\n            description\n            keywords\n          }\n        }\n        allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___order] }) {\n          edges {\n            node {\n              id\n              frontmatter {\n                order\n                path\n                title\n                section\n                description\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={props => (\n      <div>\n        <Card\n          title=\"Contents\"\n          content={props.allMarkdownRemark.edges}\n        />\n      </div>\n    )}\n  />\n);\n\nexport default IndexPage;\n","function splitSections(str) {\n  const validSectionTest = /^\\d+[A-Z]+$/;\n  const numbersRegex = /^\\d+/;\n  const lettersRegex = /[A-Z]+$/;\n  if (!validSectionTest.test(str)) {\n    throw new Error(\n      `${str} does not match the section format. It must be <numbers><capital letters>, like 16A or 5F (case sensitive)`\n    );\n  }\n\n  return [numbersRegex.exec(str)[0], lettersRegex.exec(str)[0]];\n}\n\nconst getCharScore = str =>\n  str\n    .split(\"\")\n    .map((char, index) => char.charCodeAt(0) * 10 ** index)\n    .reduce((acc, score) => acc + score);\n\nfunction sorter(a, b) {\n  let aOrder, bOrder;\n\n  if (a.attributes && a.attributes.order) {\n    aOrder = a.attributes.order;\n    bOrder = b.attributes.order;\n  } else {\n    aOrder = a.order;\n    bOrder = b.order;\n  }\n\n  const [aSec, aSub] = splitSections(aOrder);\n  const [bSec, bSub] = splitSections(bOrder);\n\n  // sections first\n  if (aSec !== bSec) {\n    return aSec - bSec;\n  }\n\n  // subsections next\n  return getCharScore(aSub) - getCharScore(bSub);\n}\n\nmodule.exports.splitSections = splitSections;\nmodule.exports.sorter = sorter;\n"],"sourceRoot":""}